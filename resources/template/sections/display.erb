<% 
begin
    page.content.render( compiler )


#<!-- =============================================================================== -->
	if page.content.is_template %>
	<h2>Template</h2>

	<%if $s[:use_ink_syntax_highlighting]
	require 'ink'%>
	<div style="white-space: pre-wrap;"><%= Ink::Highlight.highlight(page.content.filepath, :format => :html, :language => :tex)%></div>
	<% puts (page.content.filepath)%>


	<style type="text/css">
	.hll { background-color: #404040 }
	.c { color: #999999; font-style: italic } /* Comment */
	.err { color: #a61717; background-color: #e3d2d2 } /* Error */
	.g { color: #d0d0d0 } /* Generic */
	.k { color: #6ab825; font-weight: bold } /* Keyword */
	.l { color: #d0d0d0 } /* Literal */
	.n { color: #d0d0d0 } /* Name */
	.o { color: #d0d0d0 } /* Operator */
	.x { color: #d0d0d0 } /* Other */
	.p { color: #d0d0d0 } /* Punctuation */
	.cm { color: #999999; font-style: italic } /* Comment.Multiline */
	.cp { color: #cd2828; font-weight: bold } /* Comment.Preproc */
	.c1 { color: #999999; font-style: italic } /* Comment.Single */
	.cs { color: #e50808; font-weight: bold; background-color: #520000 } /* Comment.Special */
	.gd { color: #d22323 } /* Generic.Deleted */
	.ge { color: #d0d0d0; font-style: italic } /* Generic.Emph */
	.gr { color: #d22323 } /* Generic.Error */
	.gh { color: #ffffff; font-weight: bold } /* Generic.Heading */
	.gi { color: #589819 } /* Generic.Inserted */
	.go { color: #cccccc } /* Generic.Output */
	.gp { color: #aaaaaa } /* Generic.Prompt */
	.gs { color: #d0d0d0; font-weight: bold } /* Generic.Strong */
	.gu { color: #ffffff; text-decoration: underline } /* Generic.Subheading */
	.gt { color: #d22323 } /* Generic.Traceback */
	.kc { color: #6ab825; font-weight: bold } /* Keyword.Constant */
	.kd { color: #6ab825; font-weight: bold } /* Keyword.Declaration */
	.kn { color: #6ab825; font-weight: bold } /* Keyword.Namespace */
	.kp { color: #6ab825 } /* Keyword.Pseudo */
	.kr { color: #6ab825; font-weight: bold } /* Keyword.Reserved */
	.kt { color: #6ab825; font-weight: bold } /* Keyword.Type */
	.ld { color: #d0d0d0 } /* Literal.Date */
	.m { color: #3677a9 } /* Literal.Number */
	.s { color: #ed9d13 } /* Literal.String */
	.na { color: #bbbbbb } /* Name.Attribute */
	.nb { color: #24909d } /* Name.Builtin */
	.nc { color: #447fcf; text-decoration: underline } /* Name.Class */
	.no { color: #40ffff } /* Name.Constant */
	.nd { color: #ffa500 } /* Name.Decorator */
	.ni { color: #d0d0d0 } /* Name.Entity */
	.ne { color: #bbbbbb } /* Name.Exception */
	.nf { color: #447fcf } /* Name.Function */
	.nl { color: #d0d0d0 } /* Name.Label */
	.nn { color: #447fcf; text-decoration: underline } /* Name.Namespace */
	.nx { color: #d0d0d0 } /* Name.Other */
	.py { color: #d0d0d0 } /* Name.Property */
	.nt { color: #6ab825; font-weight: bold } /* Name.Tag */
	.nv { color: #40ffff } /* Name.Variable */
	.ow { color: #6ab825; font-weight: bold } /* Operator.Word */
	.w { color: #666666 } /* Text.Whitespace */
	.mf { color: #3677a9 } /* Literal.Number.Float */
	.mh { color: #3677a9 } /* Literal.Number.Hex */
	.mi { color: #3677a9 } /* Literal.Number.Integer */
	.mo { color: #3677a9 } /* Literal.Number.Oct */
	.sb { color: #ed9d13 } /* Literal.String.Backtick */
	.sc { color: #ed9d13 } /* Literal.String.Char */
	.sd { color: #ed9d13 } /* Literal.String.Doc */
	.s2 { color: #ed9d13 } /* Literal.String.Double */
	.se { color: #ed9d13 } /* Literal.String.Escape */
	.sh { color: #ed9d13 } /* Literal.String.Heredoc */
	.si { color: #ed9d13 } /* Literal.String.Interpol */
	.sx { color: #ffa500 } /* Literal.String.Other */
	.sr { color: #ed9d13 } /* Literal.String.Regex */
	.s1 { color: #ed9d13 } /* Literal.String.Single */
	.ss { color: #ed9d13 } /* Literal.String.Symbol */
	.bp { color: #24909d } /* Name.Builtin.Pseudo */
	.vc { color: #40ffff } /* Name.Variable.Class */
	.vg { color: #40ffff } /* Name.Variable.Global */
	.vi { color: #40ffff } /* Name.Variable.Instance */
	.il { color: #3677a9 } /* Literal.Number.Integer.Long */
	</style>

	<%else%>
	<div style="white-space: pre-wrap;"><%=h page.content.htmlcontent %></div>
	<%end%>
<!-- =============================================================================== -->
    <% elsif page.content.is_bibtex 
	require 'bibtex_parser'
	entries = BibTeX::Parser.parse_bibtex(page.content.content)
	%>
	<style type="text/css">
	    div.bibtex_entry{
		border: solid 1px #ddd;
		margin: 1em;
		padding: 0.5em;

		-moz-box-shadow: 2px 2px 4px #999;
		-webkit-box-shadow: 2px 2px 4px #999;
	    }

	    div.bibtex_valid_true{
		background: #ededed;
		background-image: -webkit-gradient(linear,left bottom,left top,color-stop(0.01, #fff),color-stop(0.99, #ddd));
		background: -moz-linear-gradient(top,  #ddd,  #fff);
	    }

	    div.bibtex_valid_false{
		border: solid 1px #f60;
		background: #ffdddd;
		background-image: -webkit-gradient(linear,left bottom,left top,color-stop(0.01, #fff),color-stop(0.99, #fdd));
		background: -moz-linear-gradient(top,  #fdd,  #fff);
		padding: 0.25em;
		font-weight: bold;
	    }

	    div.bibtex_entry span.bibtex_year{
		font-size: 8pt;
		float: right;
		color: #555;
		font-weight: normal;
	    }
	    div.bibtex_entry span.bibtex_key{
		font-size: 8pt;
		float: right;
		font-weight: bold;
		color: #555;
	    }

	    div.bibtex_entry div.bibtex_title{
		font-weight: bold;
	    }

	    div.bibtex_entry div.bibtex_fullinfo{
		display: none;
		border-top: solid 1px #333;
	    }

	    div.bibtex_fullinfo ul{
		list-style-type: none;
		margin: 0.5em;
		padding: 0;
		font-size: 10pt;
	    }

	    div.bibtex_fullinfo ul li span.key{
		font-weight: bold;
		margin-right: 0.5em;
	    }
	    div.bibtex_fullinfo ul li span.value{
		font-weight: normal;
	    }
	
	    ul.bibtex_errors{
		list-style-type: none;	
	    }

	    div.bibtex_entry:hover div.bibtex_fullinfo{
		display: block;
	    }

	    a.sublink{
		border-bottom: dotted 1px black;
		text-decoration: none;
		color: black;
	    }
	    a.sublink:hover{
		border-bottom: solid 1px black;
	    }

	    a.linkexistsfalse{
		color: red;
	    }


	    a.linkexiststrue{
		color: black;
	    }

	</style>


	<h2><%=h (page.content.meta["topic"] or "BibTeX")%> <span style="font-size: small;">(<%=entries.length%> Entries)</span></h2>

	<div id="bibtex_entries">
	<%
	entries.each{|e|
	  %><div class="bibtex_entry bibtex_valid_<%=e.valid%>">
	    <span class="bibtex_key">
	    <% if e.key and page.content.meta["link"].to_s.strip != "false" %>
		<a class="sublink linkexists<%=wixi.page_exists?(Pathname.new(File.join(page.relpath, e.key)))%>" href="<%= File.join(["", $s[:url_dynamic], page.relpath, e.key])%>?mode=display">
		<% end %>
		    <%=h (e.key or "(No key)")%></span>
		<% if e.key and page.content.meta["link"].to_s.strip != "false" %>
		</a>
	    <% end %>


	    <div class="bibtex_title">
	    <% if e.title and page.content.meta["link"].to_s.strip != "false" %>
		<a class="sublink" href="<%= File.join(["", $s[:url_dynamic], page.relpath, e.key])%>?mode=display">
		<% end %>
		    <%=h (e[:title] or "(No title)")%></div>
	    <% if e.title and page.content.meta["link"].to_s.strip != "false" %>
		</a>
	    <% end %>
	    <span class="bibtex_year">(<%=h (e[:year] or "no year")%>)</span>
	    
	    
	    <% if e.errors.length > 0 %>
		<ul class="bibtex_errors">
			<% e.errors.each{|err|%>
			    <li><%=h err%></li>
			<%}%>
		</ul>
	    <% else %>
		<ul class="bibtex_authors"><%e.authors.each{|a| %>
		    <li><%=h a.raw_name %></li> 
		<%}%></ul>
	    <% end %>
	    
	    <div class="bibtex_fullinfo">
		<ul>
		    <% e.instance_variable_get(:@fields).each{|k,v|%>
			<li><span class="key"><%=h k%></span>: <span class="value"><%=h v%></span></li>
		    <%}%>
		</ul>
	    </div>
	    </div><%
	}
	%>
	</div>
	<!--<div style="white-space: pre-wrap;"><%=h page.content.htmlcontent %></div>-->
<!-- =============================================================================== -->
    <% else %>
	<%= page.content.htmlcontent %>
    <% end 
#<!-- =============================================================================== -->


rescue Exception => e
    %>
    <h3>Error in Render Process</h3> 
    <div style="white-space: pre-wrap;border: solid 2px red; background-color: #fca; padding: 0.25em; font-family: monospace;">
	<%=h e.to_s%><br/><br/>
	<%=h e.backtrace.join("\n")%>
    </div>
    <%
end

%>
